import { useEffect, useMemo, useState } from 'react'

import { useDispatch } from 'react-redux'
import { useNavigate, useLocation, useSearchParams } from 'react-router-dom'

import { Layout, layoutLoading, WidjetsWrapper } from './index.linaria'
import { PageSkeleton } from './ui/PageSkeleton'
import { DEFAULT_NATAL_CHART_ID } from '@/entities/astro-charts/constants'
import {
  DEMO_NATAL_CALCULATION,
  DEMO_NATAL_SOURCE_VALUE,
} from '@/entities/astro-charts/data/demo-calculations'
import { IFullNatal–°alculations } from '@/entities/astro-charts/types/astro-charts.types'
import { SharedButton } from '@/features/SharedButton'
import InfoIcon from '@/shared/assets/icons/info-circle.svg?react'
import { SHARED_COLORS_VARIABLES } from '@/shared/assets/styles/colors'
import { PageTitle, SectionTitle } from '@/shared/assets/styles/titles.linaria'
import { HeaderBackButton } from '@/shared/components/HeaderBackButton'
import { AlertModal } from '@/shared/components/Modal'
import { PageHeader } from '@/shared/components/PageHeader'
import { ROUTER_PATHES } from '@/shared/constants/router-paths'
import { useAppSelector, store } from '@/store'
import { addNatalChart, removeNatalChart } from '@/store/slices/natal-decoding'
import { NatalCanvasPanel } from '@/widjets/NatalCanvasPanel'
import { NatalChartSourceData } from '@/widjets/NatalChartSourceData'
import { NatalDictionaryPanelTab } from '@/widjets/NatalDictionaryPanelTab'
import { NatalSummaryPanelTab } from '@/widjets/NatalSummaryPanelTab'
import { PageContentWrapper } from '@/shared/assets/styles/pages.linaria'

export const NatalDecodingPage = () => {
  const location = useLocation()
  const [searchParams] = useSearchParams()
  const navigate = useNavigate()
  const dispatch = useDispatch()

  const [isLoading, setIsLoading] = useState(false)
  const [error, setIsError] = useState(false)

  const rawChartId = useMemo(() => searchParams.get('chartId'), [location]) // üî• —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ä—É—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ URL
  const chartId = rawChartId ?? DEFAULT_NATAL_CHART_ID

  const chartValue = useAppSelector((store) => store.natalDecoding.chartsById[chartId])

  useEffect(() => {
    const isDefault = rawChartId === DEFAULT_NATAL_CHART_ID
    if (!chartValue) {
      // –ü–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ–º –Ω–∞ –¥–µ—Ñ–æ–ª—Ç, –µ—Å–ª–∏ id –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
      if (!isDefault) {
        navigate(`${ROUTER_PATHES.NATAL_DECODING_PATH}?chartId=${DEFAULT_NATAL_CHART_ID}`, {
          replace: true,
        })
      }

      const alreadyExists = store.getState().natalDecoding.chartsById[DEFAULT_NATAL_CHART_ID]
      if (!alreadyExists) {
        dispatch(
          addNatalChart({
            id: DEFAULT_NATAL_CHART_ID,
            sourceValue: DEMO_NATAL_SOURCE_VALUE,
            calculation: DEMO_NATAL_CALCULATION as unknown as IFullNatal–°alculations,
          }),
        )
      }
    }
    // —Ç—É—Ç –Ω—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–¥–∞–ª—è–µ—Ç—Å—è, –Ω–æ –ø–æ—Ç–æ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è

    return () => {
      /* const wasDefault = chartId === DEFAULT_NATAL_CHART_ID
      if (wasDefault) {
        dispatch(removeNatalChart(DEFAULT_NATAL_CHART_ID))
      } */
    }
  }, [])

  return (
    <Layout className={isLoading || error ? layoutLoading : ''}>
      <PageHeader>
        <>
          <HeaderBackButton />
          <SharedButton
            shareUrl="https://astrodoc.ru/natal-decoding?name=–ò—Ä–∏–Ω–∞&..."
            title="–ú–æ—è –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞"
            messageText="‚ú® –ú–æ—è –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞"
            buttonText="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–∞—Ä—Ç–æ–π"
            description="–ù–∞–∂–º–∏, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–∑—å—è–º"
          />
        </>
      </PageHeader>
      <PageContentWrapper>
        <PageTitle>–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã üí´</PageTitle>
        {(isLoading || error) && <PageSkeleton />}
        {!isLoading && !error && chartValue && (
          <WidjetsWrapper>
            <section>
              <SectionTitle>–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</SectionTitle>
              <NatalChartSourceData chartId={chartId} />
            </section>

            <section>
              <SectionTitle>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞</SectionTitle>
              <NatalCanvasPanel chartId={chartId} />
            </section>

            <section>
              <SectionTitle>–û—Å–Ω–æ–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç—ã</SectionTitle>
              <NatalSummaryPanelTab chartId={chartId} />
            </section>

            <section>
              <SectionTitle>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏</SectionTitle>
              <NatalDictionaryPanelTab chartId={chartId} />
            </section>
          </WidjetsWrapper>
        )}
      </PageContentWrapper>
      {!isLoading && error && (
        <AlertModal
          showExitCross={true}
          title={'–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}
          subtitle={
            <>
              –ü—Ä–æ–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É <br /> –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—É
            </>
          }
          primaryButtonText={'–ü–æ–≤—Ç–æ—Ä–∏—Ç—å'}
          onPrimaryClick={() => {}}
          secondaryButtonText={'–í–µ—Ä–Ω—É—Ç—å—Å—è'}
          icon={<InfoIcon stroke={SHARED_COLORS_VARIABLES.ERROR_COLOR} />}
          onClose={() => setIsError(false)}
        />
      )}
    </Layout>
  )
}
